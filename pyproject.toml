[tool.poetry]
name = "myresumo"
version = "0.1.0"
description = "MyResumo is an AI-powered resume customization platform that tailors your professional profile to match specific job descriptions."
authors = ["DOSSEH Shalom <dossehdosseh14@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".github",
    "__pycache__",
    "*.pyc",
    ".venv",
    "venv",
    "tests"
]

# Same as Black.
line-length = 88
indent-width = 4

[tool.ruff.lint]
# Enable flake8-docstrings (pydocstyle)
select = ["E", "F", "D", "I", "N"]
ignore = ["E501"]  # Ignore line length errors
# Enable Pycodestyle's E203 warning
extend-select = ["E203"]
# Enable preview mode for E203 to have an effect
preview = true

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.pydocstyle]
# Use Google-style docstrings.
convention = "google"

[tool.ruff.lint.isort]
known-third-party = ["fastapi", "pydantic", "sqlalchemy"]

[tool.semantic_release]
version_variable = [
    "app/__init__.py:__version__",
    "pyproject.toml:version"
]
branch = "main"
upload_to_pypi = false
upload_to_release = true
build_command = "pip install poetry && poetry build"
